#BlueJ class context
comment0.target=Game
comment0.text=\r\n\ \ This\ class\ is\ the\ main\ class\ of\ "Spongebob\ adventure"\ application.\ \r\n\ \ "Spongebob\ adventure"\ is\ a\ very\ simple,\ text\ based\ adventure\ game.\ \ Users\ \r\n\ \ can\ walk\ around\ some\ scenery.\ That's\ all.\ It\ should\ really\ be\ extended\ \r\n\ \ to\ make\ it\ more\ interesting\!\r\n\ \r\n\ \ To\ play\ this\ game,\ create\ an\ instance\ of\ this\ class\ and\ call\ the\ "play"\r\n\ \ method.\r\n\ \r\n\ \ This\ main\ class\ creates\ and\ initialises\ all\ the\ others\:\ it\ creates\ all\r\n\ \ rooms,\ creates\ the\ parser\ and\ starts\ the\ game.\ \ It\ also\ evaluates\ and\r\n\ \ executes\ the\ commands\ that\ the\ parser\ returns.\r\n\ \r\n\ @author\ \ Sander\ Brands\ and\ Kevin\ de\ Graaf\r\n\ @version\ 2020-01-26\r\n
comment1.params=args
comment1.target=void\ main(java.lang.String[])
comment1.text=\r\n\ Create\ the\ game\ and\ initialise\ its\ internal\ map.\r\n
comment10.params=
comment10.target=void\ printInventory()
comment10.text=\r\n\ printinventory\ is\ entered,\ the\ player\ see\ their\ inventory\r\n\ \r\n\ \r\n\ @param\ Prints\ inventory\r\n
comment11.params=
comment11.target=void\ printHelp()
comment11.text=\r\n\ Print\ out\ some\ help\ information.\r\n\ Here\ we\ print\ some\ stupid,\ cryptic\ message\ and\ a\ list\ of\ the\ \r\n\ command\ words.\r\n
comment12.params=command
comment12.target=void\ goRoom(Command)
comment12.text=\ \r\n\ Try\ to\ go\ in\ one\ direction.\ If\ there\ is\ an\ exit,\ enter\r\n\ the\ new\ room,\ otherwise\ print\ an\ error\ message.\r\n
comment13.params=command
comment13.target=boolean\ quit(Command)
comment13.text=\ \r\n\ "Quit"\ was\ entered.\ Check\ the\ rest\ of\ the\ command\ to\ see\r\n\ whether\ we\ really\ quit\ the\ game.\r\n\ @return\ true,\ if\ this\ command\ quits\ the\ game,\ false\ otherwise.\r\n
comment14.params=
comment14.target=void\ look()
comment14.text=\r\n\ 'look'\ was\ entered.\ Room\ information\ will\ be\ descripted\r\n\ \r\n\ @param\ Room\ information\r\n\ \r\n
comment15.params=
comment15.target=void\ eat()
comment15.text=\r\n\ 'eat'\ was\ entered.\ eat\ the\ cookie\ to\ gain\ steps\r\n\ \r\n\ @param\ Cookie\ to\ gain\ steps\r\n
comment16.params=
comment16.target=void\ goBack()
comment16.text=\r\n\ 'back'\ was\ entered.\ Try\ to\ go\ to\ the\ previous\ room.\r\n\ If\ there\ is\ no\ previous\ room\ print\ error.\r\n\ Keep\ history\ of\ all\ the\ player\ movements.\r\n
comment17.params=
comment17.target=void\ make()
comment17.text=\r\n\ 'make'\ was\ entered.\ Make\ the\ burger.\r\n\ \r\n\ \r\n
comment2.params=
comment2.target=Game()
comment3.params=
comment3.target=void\ createRooms()
comment3.text=\r\n\ Create\ all\ the\ rooms\ and\ link\ their\ exits\ together.\r\n
comment4.params=
comment4.target=void\ play()
comment4.text=\r\n\ \ Main\ play\ routine.\ \ Loops\ until\ end\ of\ play.\r\n
comment5.params=
comment5.target=void\ about()
comment6.params=
comment6.target=void\ printWelcome()
comment6.text=\r\n\ Print\ out\ the\ opening\ message\ for\ the\ player.\r\n
comment7.params=command
comment7.target=boolean\ processCommand(Command)
comment7.text=\r\n\ Given\ a\ command,\ process\ (that\ is\:\ execute)\ the\ command.\r\n\ @param\ command\ The\ command\ to\ be\ processed.\r\n\ @return\ true\ If\ the\ command\ ends\ the\ game,\ false\ otherwise.\r\n
comment8.params=command
comment8.target=void\ dropItem(Command)
comment8.text=\r\n\ drop(item)\ is\ entered,\ the\ player\ can\ drop\ an\ item\r\n\ Item\ will\ be\ removed\ out\ the\ inventory\r\n\ \r\n\ @param\ command\ The\ item\ the\ players\ wants\ to\ remove\r\n
comment9.params=command
comment9.target=void\ getItem(Command)
comment9.text=\r\n\ get(item)\ \ is\ entered,\ the\ player\ can\ pick\ an\ item\r\n\ Item\ will\ be\ placed\ in\ players\ inventory\r\n\ \r\n\ @param\ command\ The\ item\ the\ players\ wants\ to\ get\r\n
numComments=18
